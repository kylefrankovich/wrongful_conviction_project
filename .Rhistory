library(plotly)
library(dplyr)
library(ggplotly)
installed.packages('ggplotly')
library(ggplotly)
library(plotly)
library(dplyr)
setwd("~/Google Drive/wrongful_conviction_project")
# set plotly account parameters:
Sys.setenv("plotly_username"="kyle.frankovich")
Sys.setenv("plotly_api_key"="r5kz3hc8a1")
df = read.csv("NRE_data.csv") # load in National Register of Exonerations data
unique(df$State)
df$exoneration = 1 # this is maybe not the most straightforward way to get count data,
# but it's simple and it works
state.count.Fed_removed = filter(state.count, !grepl("Fed", State))
state.count <- df %>%
group_by(State) %>%
summarise(
exoneration_sum = sum(exoneration)
)
state.count.Fed_only = filter(state.count, grepl("Fed", State))
state.count.Fed_removed = filter(state.count, !grepl("Fed", State))
state.count.Fed_removed = filter(state.count.Fed_removed, !grepl("Puerto Rico", State))
state.count.Fed_removed = filter(state.count.Fed_removed, !grepl("Guam", State))
state.count.Fed_removed = filter(state.count.Fed_removed, !grepl("District of Columbia", State))
state.count.Fed_removed$code = state.abb[match(state.count.Fed_removed$State,state.name)]
View(state.count.Fed_removed)
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
plot_ly(state.count.Fed_removed, z = exoneration_sum, locations = code, type = 'choropleth',
locationmode = 'USA-states', color = exoneration_sum, colors = 'Reds',
marker = list(line = l), colorbar = list(title = "Total Exonerations"),
filename="r-docs/usa-age-choropleth") %>%
layout(title = 'Exonerations by State<br>(Hover for breakdown)', geo = g)
pop_data = read.csv("annual_pop_est_2000_2002.csv", stringsAsFactors = FALSE, header = FALSE)
pop_data2 = dplyr::slice(pop_data, 5:55) # select rows with actual state pop data
pop_data2 = filter(pop_data2, !grepl("District of Columbia", V1)) # remove DC
View(pop_data2)
state.count.Fed_removed$pop = as.numeric(gsub(",","", pop_data2$V2)) # add 2002 population data
head(state.count.Fed_removed)
xvar = state.count.Fed_removed$exoneration_sum
yvar = state.count.Fed_removed$pop
ggplot(state.count.Fed_removed, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)    # Don't add shaded confidence region
ggplot(state.count.Fed_removed, aes(x=xvar, y=yvar)) +
geom_point(shape=1)      # Use hollow circles
ggplot(state.count.Fed_removed, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm)   # Add linear regression line
#  (by default includes 95% confidence region)
ggplot(state.count.Fed_removed, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)    # Don't add shaded confidence region
ggplot(state.count.Fed_removed, aes(x = xvar,y = yvar))+stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm')
ggplot(state.count.Fed_removed, aes(x=xvar, y=yvar)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)    # Don't add shaded confidence region
p = plot_ly(data = state.count.Fed_removed, x = exoneration_sum, y = pop, text = State, mode = "markers")
p
race.count <- df %>%
group_by(Race) %>%
summarise(
exoneration_sum_race = sum(exoneration)
)
sum(race.count$exoneration_sum_race)
race.count_no_blank = dplyr::slice(race.count, 2:7)
View(race.count)
View(race.count_no_blank)
race_blank = filter(df, Race != 'Black')
race_blank = filter(race_blank, Race != 'Asian')
race_blank = filter(race_blank, Race != 'Caucasian')
race_blank = filter(race_blank, Race != 'Hispanic')
race_blank = filter(race_blank, Race != 'Native American')
race_blank = filter(race_blank, Race != 'Other')
View(race_blank)
race_plot <- plot_ly(
x = race.count_no_blank$Race,
y = race.count_no_blank$exoneration_sum_race,
name = "Exonerations by Race",
type = "bar",
filename="r-docs/simple-bar-exonerations-by-race"
)
race_plot
prison_pop_data = read.csv('all_ 4_pop_counts_1980_2013.csv')
View(prison_pop_data)
View(df)
year.count <- df %>%
group_by(Exonerated) %>%
summarise(
exoneration_sum_year = sum(exoneration)
)
View(year.count)
datn <- read.table(header=TRUE, text='
supp dose length
OJ  0.5  13.23
OJ  1.0  22.70
OJ  2.0  26.06
VC  0.5   7.98
VC  1.0  16.77
VC  2.0  26.14
')
datn
ggplot(data=datn, aes(x=dose, y=length, group=supp, colour=supp)) +
geom_line() +
geom_point()
ggplot(data=year.count, aes(x=Exonerated, y=exoneration_sum_year)) +
geom_line() +
geom_point()
plot_ly(data = year.count, x = Exonerated, y = exoneration_sum_year, name = "exonerations by year")
View(df)
dna.count <- df %>%
group_by(DNA) %>%
summarise(
exoneration_sum_dna = sum(exoneration)
)
View(dna.count)
dna.data = filter(df, DNA == 'DNA')
View(dna.count)
View(dna.data)
min(dna.data$Exonerated)
plot_ly(data = dna.data, x = Exonerated, y = exoneration_sum_year, name = "exonerations by year (DNA)")
View(year.count)
View(year.count)
View(dna.data)
dna.year.count <- dna.data %>%
group_by(Exonerated) %>%
summarise(
exoneration_sum_year_dna = sum(exoneration)
)
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year, name = "exonerations by year (DNA)")
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year_dna, name = "exonerations by year (DNA)")
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year_dna, name = "exonerations by year (DNA)") %>%
layout(xaxis = 'DNA exonerations by year')
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year_dna, name = "exonerations by year (DNA)") %>%
layout(xaxis = x)
x <- list(
title = "x Axis",
)
x <- list(
title = "x Axis"
)
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year_dna, name = "exonerations by year (DNA)") %>%
layout(xaxis = x)
x <- list(
title = "DNA exonerations by year"
)
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year_dna, name = "exonerations by year (DNA)") %>%
layout(xaxis = x)
x
plot_ly(data = dna.year.count, x = Exonerated, y = exoneration_sum_year_dna, name = "exonerations by year (DNA)") %>%
layout(xaxis$title = 'x')
install.packages('gganimate')
install.packages("installr")
